---
- name: Install k8s dependencies
  hosts: kubelet
  become: true

  vars:
    runc_version: 1.3.2
    containerd_version: 2.1.4
    crictl_version: v1.34.0

  tasks:

  - name: setup kernel modules
    ansible.builtin.copy:
      src: ./containerd-modules.conf
      dest: /etc/modules-load.d/containerd.conf
      owner: root
      group: root
      mode: "0644"
    notify:
    - modules_service_restart

  - name: copy sysctl config file
    become: true
    ansible.builtin.copy:
      src: ./sysctl/{{ item }}
      dest: /etc/sysctl.d/{{ item }}
      owner: root
      group: root
      mode: "0644"
    loop:
    - kubernetes.conf
    - inotify.conf
    - apr_proxy.conf
    notify:
    - sysctl_apply

  - name: copy runc binary
    ansible.builtin.copy:
      src: ./env/runc-{{ runc_version }}.amd64
      dest: /usr/local/sbin/runc
      owner: root
      group: root
      mode: "0755"

  - name: copy containerd binary
    ansible.builtin.copy:
      src: ./env/containerd-{{ containerd_version}}/bin/
      dest: /usr/local/bin/
      owner: root
      group: root
      mode: "0755"
    notify:
    - containerd_service_restart

  - name: remove containerd service on path from guides
    ansible.builtin.file:
      path: /usr/lib/systemd/system/containerd.service
      state: absent
    notify:
    - systemd_daemon_reload
    - containerd_service_restart

  - name: copy containerd.service
    copy:
      src: ./containerd.service
      dest: /etc/systemd/system/containerd.service
      owner: root
      group: root
      mode: "0644"
    notify:
    - systemd_daemon_reload
    - containerd_service_restart

  - name: copy crictl binary
    ansible.builtin.copy:
      src: ./env/crictl-{{ crictl_version }}/crictl
      dest: /usr/local/bin/crictl
      owner: root
      group: root
      mode: "0755"
    notify:
    - crictl_config

  - name: remove k8s apt packages
    ansible.builtin.apt:
      name: "{{ item }}"
      state: absent
      allow_change_held_packages: true
    loop:
    - kubelet
    - kubeadm

  - name: create /etc/containerd/certs.d/
    ansible.builtin.file:
      path: /etc/containerd/certs.d/
      state: directory
      owner: root
      group: root
      mode: '0755'
    when: oci_proxy_id is defined

  - name: copy OCI proxy config
    ansible.builtin.copy:
      src: ./env/oci-proxy-{{ oci_proxy_id }}/
      dest: /etc/containerd/certs.d/
      owner: root
      group: root
      mode: preserve
    when: oci_proxy_id is defined

  handlers:
  - name: apply sysctl params
    listen:
    - sysctl_apply
    shell: sysctl --system
  - name: crictl config
    listen:
    - crictl_config
    shell: crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock
  - name: systemd daemon-reload
    listen:
    - systemd_daemon_reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: restart systemd-modules-load.service
    listen:
    - modules_service_restart
    ansible.builtin.systemd_service:
      name: systemd-modules-load.service
      enabled: true
      state: restarted
      daemon_reload: false
  - name: restart containerd.service
    listen:
    - containerd_service_restart
    ansible.builtin.systemd_service:
      name: containerd.service
      enabled: true
      state: restarted
      daemon_reload: false
